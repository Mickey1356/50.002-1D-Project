module game_loop (
    input clk,  // clock
    input rst,  // reset
    input up,
    input down,
    input left,
    input right,
    input reset,
        
    output tiles_g[28],
    output tiles_p[28]
  ) {
  
  .clk(clk) {
    .rst(rst) {
      state_counter sc; // add delay for inputs
      
      state_counter sc2 (#DIV(28)); // timer for level 4 - about 5s
      
      game_controller gc;
      
      fsm game_states = {START, EXPLORE1, EXPLORE1WIN, EXPLORE2, EXPLORE2WIN, EXPLORE3, EXPLORE3WIN, EXPLORE4FROZEN, EXPLORE4, EXPLORE4WIN, EXPLORE5, WINGAME};
    }
  }

  always {
    gc.up = up;
    gc.down = down;
    gc.left = left;
    gc.right = right;
    // gc.reset = reset;
    
    tiles_g = gc.tiles_g;
    tiles_p = gc.tiles_p;
    
    gc.level_state = 0;
    
    case (game_states.q) {
      game_states.START:
        if (up & sc.out) {
          gc.level_state = 0;
          game_states.d = game_states.EXPLORE1;
        }
      game_states.EXPLORE1:
        gc.level_state = 1;
        if(gc.win & sc.out) {
          game_states.d = game_states.EXPLORE1WIN;
        }
        if (gc.lose & sc.out) {
          game_states.d = game_states.START;
        }
      game_states.EXPLORE1WIN:
        gc.level_state = 7; // unused number
        if(up & sc.out) {
          game_states.d = game_states.EXPLORE2;
        }
      game_states.EXPLORE2:
        gc.level_state = 2;
        if(gc.win & sc.out) {
          game_states.d = game_states.EXPLORE2WIN;
        }
        if(gc.lose & sc.out) {
          game_states.d = game_states.START;
        }
      game_states.EXPLORE2WIN:
        gc.level_state = 7; // unused number
        if(up & sc.out) {
          game_states.d = game_states.EXPLORE3;
        }
      game_states.EXPLORE3:
        gc.level_state = 3;
        if(gc.win & sc.out) {
          game_states.d = game_states.EXPLORE3WIN;
        }
        if(gc.lose & sc.out) {
          game_states.d = game_states.START;
        }
      game_states.EXPLORE3WIN:
        gc.level_state = 7; // unused number
        if(up & sc.out) {
          game_states.d = game_states.EXPLORE4FROZEN;
        }
      game_states.EXPLORE4FROZEN:
        gc.level_state = 4;
        if(sc2.out == 1) {
          game_states.d = game_states.EXPLORE4;
        }
        //insert timer input here
        
      game_states.EXPLORE4:
        gc.level_state=5;
         if(gc.win & sc.out) {
          game_states.d = game_states.EXPLORE4WIN;
        }
        if(gc.lose & sc.out) {
          game_states.d = game_states.START;
        }
      game_states.EXPLORE4WIN:
        gc.level_state = 7; // unused number
        if(up & sc.out) {
          game_states.d = game_states.EXPLORE5;
        }
       game_states.EXPLORE5:
        gc.level_state=6;
         if(gc.win & sc.out) {
          game_states.d = game_states.WINGAME;
        }
        if(gc.lose & sc.out) {
          game_states.d = game_states.START;
        }
      game_states.WINGAME:
        gc.level_state=0;
        if(up & sc.out) {
            game_states.d = game_states.START;
        }
    }
  }
}
