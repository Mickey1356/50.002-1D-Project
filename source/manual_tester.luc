module manual_tester (
    input clk,  // clock
    input rst,  // reset
    input switches[24],
    input man_next,
    output leds[24],
    output segs[8],
    output sel[4]
  ) {
  
  .clk(clk) {
    .rst(rst) {
      multi_seven_seg mss;
      dff a[16];
      fsm state = {INA, INB};
    }
  }
    
  sig b[16];
  sig alufn[6];
  
  alu alu;

  always {
    alu.alufn = 0;
    alu.a = 0;
    alu.b = 0;
    
    segs = ~mss.seg;
    sel = ~mss.sel;
    
    mss.values = {5d31, 5d31, 5d31, 5d31};
    
    alufn = switches[23:18];
    leds = 0;
    case (state.q) {
      state.INA:
        // print "A   "
        mss.values = {5d10, 5d31, 5d31, 5d31};
        a.d = switches[15:0];
        if (man_next) {
          state.d = state.INB;
        }
      state.INB:
        // print "B   "
        mss.values = {5d11, 5d31, 5d31, 5d31};
        
        b = switches[15:0];
        alu.alufn = alufn;
        alu.a = a.q;
        alu.b = b;
        leds[15:0] = alu.out;
        
        leds[23] = alu.z;
        leds[22] = alu.v;
        leds[21] = alu.n;
        
    }
  }
}
