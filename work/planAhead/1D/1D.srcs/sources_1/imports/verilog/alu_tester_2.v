/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module alu_tester_2 (
    input clk,
    input rst,
    input auto_sel,
    input auto_next,
    input man_sel,
    input man_next,
    input [23:0] switches,
    output reg [7:0] seg,
    output reg [3:0] sel,
    output reg [23:0] leds
  );
  
  
  
  wire [8-1:0] M_mss_seg;
  wire [4-1:0] M_mss_sel;
  reg [20-1:0] M_mss_values;
  multi_seven_seg_3 mss (
    .clk(clk),
    .rst(rst),
    .values(M_mss_values),
    .seg(M_mss_seg),
    .sel(M_mss_sel)
  );
  localparam IDLE_test_state = 2'd0;
  localparam AUTO_test_state = 2'd1;
  localparam MAN_test_state = 2'd2;
  
  reg [1:0] M_test_state_d, M_test_state_q = IDLE_test_state;
  wire [8-1:0] M_auto_tester_seg;
  wire [4-1:0] M_auto_tester_sel;
  wire [16-1:0] M_auto_tester_leds;
  reg [1-1:0] M_auto_tester_next;
  auto_tester_4 auto_tester (
    .clk(clk),
    .rst(rst),
    .next(M_auto_tester_next),
    .seg(M_auto_tester_seg),
    .sel(M_auto_tester_sel),
    .leds(M_auto_tester_leds)
  );
  wire [24-1:0] M_manual_tester_leds;
  wire [8-1:0] M_manual_tester_segs;
  wire [4-1:0] M_manual_tester_sel;
  reg [24-1:0] M_manual_tester_switches;
  reg [1-1:0] M_manual_tester_man_next;
  manual_tester_5 manual_tester (
    .clk(clk),
    .rst(rst),
    .switches(M_manual_tester_switches),
    .man_next(M_manual_tester_man_next),
    .leds(M_manual_tester_leds),
    .segs(M_manual_tester_segs),
    .sel(M_manual_tester_sel)
  );
  
  always @* begin
    M_test_state_d = M_test_state_q;
    
    M_auto_tester_next = auto_next;
    M_manual_tester_man_next = man_next;
    M_manual_tester_switches = switches;
    M_mss_values = 20'hfffff;
    seg = ~M_mss_seg;
    sel = ~M_mss_sel;
    leds = 1'h0;
    
    case (M_test_state_q)
      IDLE_test_state: begin
        M_mss_values = 20'hffff5;
        if (auto_sel) begin
          M_test_state_d = AUTO_test_state;
        end else begin
          if (man_sel) begin
            M_test_state_d = MAN_test_state;
          end
        end
      end
      AUTO_test_state: begin
        seg = M_auto_tester_seg;
        sel = M_auto_tester_sel;
      end
      MAN_test_state: begin
        leds = M_manual_tester_leds;
        seg = M_manual_tester_segs;
        sel = M_manual_tester_sel;
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_test_state_q <= 1'h0;
    end else begin
      M_test_state_q <= M_test_state_d;
    end
  end
  
endmodule
