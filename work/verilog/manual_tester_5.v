/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module manual_tester_5 (
    input clk,
    input rst,
    input [23:0] switches,
    input man_next,
    output reg [23:0] leds,
    output reg [7:0] segs,
    output reg [3:0] sel
  );
  
  
  
  wire [8-1:0] M_mss_seg;
  wire [4-1:0] M_mss_sel;
  reg [20-1:0] M_mss_values;
  multi_seven_seg_3 mss (
    .clk(clk),
    .rst(rst),
    .values(M_mss_values),
    .seg(M_mss_seg),
    .sel(M_mss_sel)
  );
  reg [15:0] M_a_d, M_a_q = 1'h0;
  localparam INA_state = 1'd0;
  localparam INB_state = 1'd1;
  
  reg M_state_d, M_state_q = INA_state;
  
  reg [15:0] b;
  
  reg [5:0] alufn;
  
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  wire [16-1:0] M_alu_out;
  reg [16-1:0] M_alu_a;
  reg [16-1:0] M_alu_b;
  reg [6-1:0] M_alu_alufn;
  alu_9 alu (
    .a(M_alu_a),
    .b(M_alu_b),
    .alufn(M_alu_alufn),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n),
    .out(M_alu_out)
  );
  
  always @* begin
    M_state_d = M_state_q;
    M_a_d = M_a_q;
    
    M_alu_alufn = 1'h0;
    M_alu_a = 1'h0;
    M_alu_b = 1'h0;
    segs = ~M_mss_seg;
    sel = ~M_mss_sel;
    M_mss_values = 20'hfffff;
    alufn = switches[18+5-:6];
    leds = 1'h0;
    
    case (M_state_q)
      INA_state: begin
        M_mss_values = 20'h57fff;
        M_a_d = switches[0+15-:16];
        if (man_next) begin
          M_state_d = INB_state;
        end
      end
      INB_state: begin
        M_mss_values = 20'h5ffff;
        b = switches[0+15-:16];
        M_alu_alufn = alufn;
        M_alu_a = M_a_q;
        M_alu_b = b;
        leds[0+15-:16] = M_alu_out;
        leds[23+0-:1] = M_alu_z;
        leds[22+0-:1] = M_alu_v;
        leds[21+0-:1] = M_alu_n;
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_a_q <= 1'h0;
      M_state_q <= 1'h0;
    end else begin
      M_a_q <= M_a_d;
      M_state_q <= M_state_d;
    end
  end
  
endmodule
